// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task5_EF.Context;

namespace Flower.DAL.Migrations
{
    [DbContext(typeof(FlowerContext))]
    [Migration("20200422185545_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.2.20159.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Task5_EF.Entities.Plantation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Plantations");
                });

            modelBuilder.Entity("Task5_EF.Entities.PlantationFlower", b =>
                {
                    b.Property<int>("FlowerId")
                        .HasColumnType("int");

                    b.Property<int>("PlantationId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(21)")
                        .HasMaxLength(21);

                    b.HasKey("FlowerId", "PlantationId");

                    b.HasIndex("PlantationId");

                    b.ToTable("PlantationFlowers");
                });

            modelBuilder.Entity("Task5_EF.Entities.Supply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlantationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Supplies");

                    b.HasCheckConstraint("CK_Supplies_Status_Enum_Constraint", "[Status] IN(0, 1, 2, 3)");
                });

            modelBuilder.Entity("Task5_EF.Entities.SupplyFlower", b =>
                {
                    b.Property<int>("FlowerId")
                        .HasColumnType("int");

                    b.Property<int>("SupplyId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(21)")
                        .HasMaxLength(21);

                    b.HasKey("FlowerId", "SupplyId");

                    b.HasIndex("SupplyId");

                    b.ToTable("SupplyFlowers");
                });

            modelBuilder.Entity("Task5_EF.Entities.TheFlower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TheFlowers");
                });

            modelBuilder.Entity("Task5_EF.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("Task5_EF.Entities.WarehouseFlower", b =>
                {
                    b.Property<int>("FlowerId")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(21)")
                        .HasMaxLength(21);

                    b.HasKey("FlowerId", "WarehouseId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("WarehouseFlowers");
                });

            modelBuilder.Entity("Task5_EF.Entities.PlantationFlower", b =>
                {
                    b.HasOne("Task5_EF.Entities.TheFlower", "TheFlower")
                        .WithMany("PlantationFlowers")
                        .HasForeignKey("FlowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Task5_EF.Entities.Plantation", "Plantation")
                        .WithMany("PlantationFlowers")
                        .HasForeignKey("PlantationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Task5_EF.Entities.SupplyFlower", b =>
                {
                    b.HasOne("Task5_EF.Entities.TheFlower", "TheFlower")
                        .WithMany("SupplyFlowers")
                        .HasForeignKey("FlowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Task5_EF.Entities.Supply", "Supply")
                        .WithMany("SupplyFlowers")
                        .HasForeignKey("SupplyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Task5_EF.Entities.WarehouseFlower", b =>
                {
                    b.HasOne("Task5_EF.Entities.TheFlower", "TheFlower")
                        .WithMany("WarehouseFlowers")
                        .HasForeignKey("FlowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Task5_EF.Entities.Warehouse", "Warehouse")
                        .WithMany("WarehouseFlowers")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
